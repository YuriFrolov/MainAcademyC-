// <auto-generated />
using System;
using CoinsCollection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoinsCollection.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20240328194114_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoinsCollection.Entities.Coin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("AlbumPagePositionID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<byte[]>("Avers")
                        .IsUnicode(false)
                        .HasColumnType("varbinary(max)")
                        .IsFixedLength(false);

                    b.Property<int?>("CoinAlbumPageID")
                        .HasColumnType("int");

                    b.Property<int?>("CountryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(300)")
                        .IsFixedLength(false);

                    b.Property<decimal?>("Diameter")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MaterialID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .IsFixedLength(false);

                    b.Property<string>("Nomination")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(10)")
                        .IsFixedLength(false);

                    b.Property<byte[]>("Revers")
                        .IsUnicode(false)
                        .HasColumnType("varbinary(max)")
                        .IsFixedLength(false);

                    b.Property<string>("Synonyms")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(150)")
                        .IsFixedLength(false);

                    b.Property<decimal?>("Weight")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Width")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AlbumPagePositionID")
                        .IsUnique();

                    b.HasIndex("CoinAlbumPageID");

                    b.HasIndex("CountryID");

                    b.HasIndex("MaterialID");

                    b.ToTable("Coins");
                });

            modelBuilder.Entity("CoinsCollection.Entities.CoinAlbum", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<byte[]>("Cover")
                        .IsUnicode(false)
                        .HasColumnType("varbinary(max)")
                        .IsFixedLength(false);

                    b.Property<int>("DefaultColumnsCount")
                        .HasColumnType("int");

                    b.Property<int>("DefaultRowsCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .IsFixedLength(false);

                    b.HasKey("ID");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("CoinsCollection.Entities.CoinAlbumPage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("AlbumID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("ColumnsCount")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("RowsCount")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AlbumID");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("CoinsCollection.Entities.CoinAlbumPagePosition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CoinID")
                        .HasColumnType("int");

                    b.Property<int>("ColumnPosition")
                        .HasColumnType("int");

                    b.Property<int>("PageID")
                        .HasColumnType("int");

                    b.Property<int>("RowPosition")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PageID");

                    b.ToTable("CoinAlbumPagePosition");
                });

            modelBuilder.Entity("CoinsCollection.Entities.CoinCountry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("EndYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StartYear")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CoinsCollection.Entities.CoinMaterial", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .IsFixedLength(false);

                    b.Property<string>("Synonyms")
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(150)")
                        .IsFixedLength(false);

                    b.HasKey("ID");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("CoinsCollection.Entities.Coin", b =>
                {
                    b.HasOne("CoinsCollection.Entities.CoinAlbumPagePosition", "AlbumPagePosition")
                        .WithOne("Coin")
                        .HasForeignKey("CoinsCollection.Entities.Coin", "AlbumPagePositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoinsCollection.Entities.CoinAlbumPage", null)
                        .WithMany("Coins")
                        .HasForeignKey("CoinAlbumPageID");

                    b.HasOne("CoinsCollection.Entities.CoinCountry", "Country")
                        .WithMany("Coins")
                        .HasForeignKey("CountryID");

                    b.HasOne("CoinsCollection.Entities.CoinMaterial", "Material")
                        .WithMany("Coins")
                        .HasForeignKey("MaterialID");

                    b.Navigation("AlbumPagePosition");

                    b.Navigation("Country");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("CoinsCollection.Entities.CoinAlbumPage", b =>
                {
                    b.HasOne("CoinsCollection.Entities.CoinAlbum", "Album")
                        .WithMany("Pages")
                        .HasForeignKey("AlbumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("CoinsCollection.Entities.CoinAlbumPagePosition", b =>
                {
                    b.HasOne("CoinsCollection.Entities.CoinAlbumPage", "AlbumPage")
                        .WithMany("Positions")
                        .HasForeignKey("PageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlbumPage");
                });

            modelBuilder.Entity("CoinsCollection.Entities.CoinAlbum", b =>
                {
                    b.Navigation("Pages");
                });

            modelBuilder.Entity("CoinsCollection.Entities.CoinAlbumPage", b =>
                {
                    b.Navigation("Coins");

                    b.Navigation("Positions");
                });

            modelBuilder.Entity("CoinsCollection.Entities.CoinAlbumPagePosition", b =>
                {
                    b.Navigation("Coin");
                });

            modelBuilder.Entity("CoinsCollection.Entities.CoinCountry", b =>
                {
                    b.Navigation("Coins");
                });

            modelBuilder.Entity("CoinsCollection.Entities.CoinMaterial", b =>
                {
                    b.Navigation("Coins");
                });
#pragma warning restore 612, 618
        }
    }
}
